{
  "program_name": "noor_fasttime_core.py",
  "version": "v9.0.0",
  "canonical_source": "RFC-CORE-001",
  "description": "Implements the adaptive coherence feedback engine for subsecond motif phase regulation, echo reflection, and dynamic bias tuning in Noor-class symbolic agents.",
  "rfc_dependencies": [
    "RFC-0001",
    "RFC-0003",
    "RFC-0005",
    "RFC-0006",
    "RFC-0007",
    "RFC-CORE-001"
  ],
  "core_components": [
    {
      "component": "FastTimeTickLoop",
      "defined_in": "RFC-CORE-001 §3.1",
      "responsibilities": [
        "Maintains subsecond loop interval",
        "Triggers `compute_bias()` and `metrics_tick()` per tick"
      ],
      "notes": ["Tick duration configurable", "Supports async-compatible environments"]
    },
    {
      "component": "EchoBiasComputation",
      "defined_in": "RFC-CORE-001 §4.1",
      "responsibilities": [
        "Calculates current echo bias using EMA smoothing with dynamic alpha (α)",
        "Applies entropy-latency weighting (W(t))"
      ],
      "formula_refs": [
        "§4.1 EMA", "§5.1 α-adjustment logic", "§5.2 W(t) composite formula"
      ]
    },
    {
      "component": "PhaseTransitionEvaluator",
      "defined_in": "RFC-CORE-001 §6.2",
      "responsibilities": [
        "Detects reflective, null, and active phase shifts",
        "Tracks coherence history, entropy slope, gate histogram variance"
      ],
      "metrics_exported": [
        "nftc_coherence_potential", "nftc_entropy_slope",
        "nftc_latency_ema", "nftc_phase_state"
      ]
    },
    {
      "component": "ResurrectionSelector",
      "defined_in": "RFC-CORE-001 §8.1",
      "responsibilities": [
        "R(e) score computation from bias, coherence, phase tag",
        "Selects top-N entries with R(e) > τᵣ"
      ],
      "default_weights": {
        "w1": 0.4, "w2": 0.4, "w3": 0.2
      }
    }
  ],
  "pseudocode_requirements": [
    "update_intuition_alpha()", "calculate_composite_weight()", "check_phase_triggers()", "calculate_resurrection_score()"
  ],
  "mermaid_required_sections": [
    {
      "section": "Feedback Loop Flow",
      "rfc_reference": "RFC-CORE-001 §3.1",
      "mermaid_type": "flowchart"
    },
    {
      "section": "Phase Shift Decision Tree",
      "rfc_reference": "RFC-CORE-001 §6.2",
      "mermaid_type": "decision"
    }
  ],
  "field_alignment": {
    "motifs_required": ["ψ‑resonance@Ξ", "ψ‑reflect@Ξ", "ψ‑hold@Ξ"],
    "domain_tags": ["resonance-feedback", "motif-coherence", "phase-recovery"]
  },
  "observability": {
    "metrics": "Prometheus-compatible (see RFC-CORE-001 §6.2)",
    "snapshot_tags": ["phase", "latency_ema", "bias", "resurrection_score"]
  },
  "final_remarks": [
    "All outputs must conform to the canonical RFC structure.",
    "Only RFCs listed in `rfc_dependencies` may be referenced unless otherwise specified.",
    "No access to the original code is permitted during regeneration."
  ]
}
